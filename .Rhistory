fplot <- function(str,ref){
#input: raw text, array with reference frequencies
#output: plot
rfreqs <- sanitize(str)
alphabet_filled <- fill_freqs(rfreqs)
if (ref[1] != "None") {
alphabet_filled_ref <- fill_freqs(ref)
#two-hist plot
p <- ggplot(data=alphabet_filled, aes(x=seq(1:26),y=rfreqs)) + geom_bar(stat="identity",aes(fill=rfreqs)) +
scale_x_discrete(breaks = c(1:26), labels=letters) +
geom_bar(data=alphabet_filled_ref,stat="identity",color="salmon",alpha = 0) +
theme(legend.position="none") +
#             geom_text(aes(label=rfreqs),hjust=0,vjust=-0.5,size=4) +
labs(title="Relative Letter Frequency", x = "letter", y="relative frequency")
} else {
#one-hist plot
p <- ggplot(data=alphabet_filled, aes(x=seq(1:26),y=rfreqs)) + geom_bar(stat="identity",aes(fill=rfreqs)) +
scale_x_discrete(breaks = c(1:26), labels=letters) +
theme(legend.position="none") +
geom_text(aes(label=round(rfreqs),hjust=0,vjust=-0.5,size=4) +
labs(title="Relative Letter Frequency", x = "letter", y="relative frequency")
}
print(p)
}
#helper functions
library(ggplot2)
sanitize <- function(str){
#input: raw text string
#output: relative frequencies
str <- substr(str,1,30000)
newstr <- gsub("[^[:alpha:]]", "", str)
newstr <- tolower(newstr)
chars <- strsplit(newstr, NULL)[[1]]
freqs <- summary(factor(chars))
rfreqs <- freqs / sum(freqs)
return(rfreqs)
}
fill_freqs <- function(rfreqs) {
#input: relative frequencies (not necessarily for all 26 letters)
#output: relative frequencies for all 26 letters
#make 0-count vector
alphabet <- rep(1,26)
names(alphabet) <- letters
alphabet_filled <- sapply(1:26, function(x) {rfreqs[names(alphabet)[x]]})
alphabet_filled[is.na(alphabet_filled)] <- 0
names(alphabet_filled) <- letters
alphabet_filled <- as.data.frame(alphabet_filled)
names(alphabet_filled) <- "rfreqs"
return(alphabet_filled)
}
fplot <- function(str,ref){
#input: raw text, array with reference frequencies
#output: plot
rfreqs <- sanitize(str)
alphabet_filled <- fill_freqs(rfreqs)
if (ref[1] != "None") {
alphabet_filled_ref <- fill_freqs(ref)
#two-hist plot
p <- ggplot(data=alphabet_filled, aes(x=seq(1:26),y=rfreqs)) + geom_bar(stat="identity",aes(fill=rfreqs)) +
scale_x_discrete(breaks = c(1:26), labels=letters) +
geom_bar(data=alphabet_filled_ref,stat="identity",color="salmon",alpha = 0) +
theme(legend.position="none") +
#             geom_text(aes(label=rfreqs),hjust=0,vjust=-0.5,size=4) +
labs(title="Relative Letter Frequency", x = "letter", y="relative frequency")
} else {
#one-hist plot
p <- ggplot(data=alphabet_filled, aes(x=seq(1:26),y=rfreqs)) + geom_bar(stat="identity",aes(fill=rfreqs)) +
scale_x_discrete(breaks = c(1:26), labels=letters) +
theme(legend.position="none") +
geom_text(aes(label=round(rfreqs)),hjust=0,vjust=-0.5,size=4) +
labs(title="Relative Letter Frequency", x = "letter", y="relative frequency")
}
print(p)
}
fplot(str,"None")
#helper functions
library(ggplot2)
sanitize <- function(str){
#input: raw text string
#output: relative frequencies
str <- substr(str,1,30000)
newstr <- gsub("[^[:alpha:]]", "", str)
newstr <- tolower(newstr)
chars <- strsplit(newstr, NULL)[[1]]
freqs <- summary(factor(chars))
rfreqs <- freqs / sum(freqs)
return(freqs)
}
fill_freqs <- function(rfreqs) {
#input: relative frequencies (not necessarily for all 26 letters)
#output: relative frequencies for all 26 letters
#make 0-count vector
alphabet <- rep(1,26)
names(alphabet) <- letters
alphabet_filled <- sapply(1:26, function(x) {rfreqs[names(alphabet)[x]]})
alphabet_filled[is.na(alphabet_filled)] <- 0
names(alphabet_filled) <- letters
alphabet_filled <- as.data.frame(alphabet_filled)
names(alphabet_filled) <- "rfreqs"
return(alphabet_filled)
}
fplot <- function(str,ref){
#input: raw text, array with reference frequencies
#output: plot
freqs <- sanitize(str)
alphabet_filled <- fill_freqs(freqs)
rfreqs <- freqs/sum(freqs)
if (ref[1] != "None") {
alphabet_filled_ref <- fill_freqs(ref)
#two-hist plot
p <- ggplot(data=alphabet_filled, aes(x=seq(1:26),y=rfreqs)) + geom_bar(stat="identity",aes(fill=rfreqs)) +
scale_x_discrete(breaks = c(1:26), labels=letters) +
geom_bar(data=alphabet_filled_ref,stat="identity",color="salmon",alpha = 0) +
theme(legend.position="none") +
#             geom_text(aes(label=rfreqs),hjust=0,vjust=-0.5,size=4) +
labs(title="Relative Letter Frequency", x = "letter", y="relative frequency")
} else {
#one-hist plot
p <- ggplot(data=alphabet_filled, aes(x=seq(1:26),y=rfreqs)) + geom_bar(stat="identity",aes(fill=rfreqs)) +
scale_x_discrete(breaks = c(1:26), labels=letters) +
theme(legend.position="none") +
geom_text(aes(label=round(freqs)),hjust=0,vjust=-0.5,size=4) +
labs(title="Relative Letter Frequency", x = "letter", y="relative frequency")
}
print(p)
}
fplot(str,"None")
sanitize <- function(str){
#input: raw text string
#output: relative frequencies
str <- substr(str,1,30000)
newstr <- gsub("[^[:alpha:]]", "", str)
newstr <- tolower(newstr)
chars <- strsplit(newstr, NULL)[[1]]
freqs <- summary(factor(chars))
rfreqs <- freqs / sum(freqs)
return(freqs)
}
sanitize(str)
fill_freqs(sanitize(str))
fill_freqs <- function(freqs) {
#input: relative frequencies (not necessarily for all 26 letters)
#output: relative frequencies for all 26 letters
#make 0-count vector
alphabet <- rep(1,26)
names(alphabet) <- letters
alphabet_filled <- sapply(1:26, function(x) {freqs[names(alphabet)[x]]})
alphabet_filled[is.na(alphabet_filled)] <- 0
names(alphabet_filled) <- letters
alphabet_filled <- as.data.frame(alphabet_filled)
names(alphabet_filled) <- "freqs"
return(alphabet_filled)
}
fill_freqs(sanitize(str))
freqs
library(ggplot2)
sanitize <- function(str){
#input: raw text string
#output: relative frequencies
str <- substr(str,1,30000)
newstr <- gsub("[^[:alpha:]]", "", str)
newstr <- tolower(newstr)
chars <- strsplit(newstr, NULL)[[1]]
freqs <- summary(factor(chars))
rfreqs <- freqs / sum(freqs)
return(freqs)
}
fill_freqs <- function(freqs) {
#input: relative frequencies (not necessarily for all 26 letters)
#output: relative frequencies for all 26 letters
#make 0-count vector
alphabet <- rep(1,26)
names(alphabet) <- letters
alphabet_filled <- sapply(1:26, function(x) {freqs[names(alphabet)[x]]})
alphabet_filled[is.na(alphabet_filled)] <- 0
names(alphabet_filled) <- letters
alphabet_filled <- as.data.frame(alphabet_filled)
names(alphabet_filled) <- "rfreqs"
return(alphabet_filled)
}
fill_freqs(sanitize(str))
freqs <- sanitize(str)
freqs
rfreqs <- freqs/sum(freqs)
rfreqs
sum(rfreqs)
alphabet_filled_freqs <- fill_freqs(freqs)
alphabet_filled_rfreqs <- fill_freqs(freqs)
View(alphabet_filled_freqs)
View(alphabet_filled_rfreqs)
alphabet_filled_rfreqs <- fill_freqs(rfreqs)
View(alphabet_filled_rfreqs)
fplot <- function(str,ref){
#input: raw text, array with reference frequencies
#output: plot
freqs <- sanitize(str)
rfreqs <- freqs/sum(freqs)
alphabet_filled_freqs <- fill_freqs(freqs)
alphabet_filled_rfreqs <- fill_freqs(rfreqs)
if (ref[1] != "None") {
alphabet_filled_ref <- fill_freqs(ref)
#two-hist plot
p <- ggplot(data=alphabet_filled, aes(x=seq(1:26),y=rfreqs)) + geom_bar(stat="identity",aes(fill=rfreqs)) +
scale_x_discrete(breaks = c(1:26), labels=letters) +
geom_bar(data=alphabet_filled_ref,stat="identity",color="salmon",alpha = 0) +
theme(legend.position="none") +
#             geom_text(aes(label=rfreqs),hjust=0,vjust=-0.5,size=4) +
labs(title="Relative Letter Frequency", x = "letter", y="relative frequency")
} else {
#one-hist plot
p <- ggplot(data=alphabet_filled_rfreqs, aes(x=seq(1:26),y=rfreqs)) + geom_bar(stat="identity",aes(fill=rfreqs)) +
scale_x_discrete(breaks = c(1:26), labels=letters) +
theme(legend.position="none") +
geom_text(aes(label=round(rfreqs)),hjust=0,vjust=-0.5,size=4) +
labs(title="Relative Letter Frequency", x = "letter", y="relative frequency")
}
print(p)
}
fplot(str,"None")
fplot <- function(str,ref){
#input: raw text, array with reference frequencies
#output: plot
freqs <- sanitize(str)
rfreqs <- freqs/sum(freqs)
alphabet_filled_freqs <- fill_freqs(freqs)
alphabet_filled_rfreqs <- fill_freqs(rfreqs)
if (ref[1] != "None") {
alphabet_filled_ref <- fill_freqs(ref)
#two-hist plot
p <- ggplot(data=alphabet_filled, aes(x=seq(1:26),y=rfreqs)) + geom_bar(stat="identity",aes(fill=rfreqs)) +
scale_x_discrete(breaks = c(1:26), labels=letters) +
geom_bar(data=alphabet_filled_ref,stat="identity",color="salmon",alpha = 0) +
theme(legend.position="none") +
#             geom_text(aes(label=rfreqs),hjust=0,vjust=-0.5,size=4) +
labs(title="Relative Letter Frequency", x = "letter", y="relative frequency")
} else {
#one-hist plot
p <- ggplot(data=alphabet_filled_rfreqs, aes(x=seq(1:26),y=rfreqs)) + geom_bar(stat="identity",aes(fill=rfreqs)) +
scale_x_discrete(breaks = c(1:26), labels=letters) +
theme(legend.position="none") +
geom_text(aes(label=round(rfreqs)),hjust=0,vjust=0,size=4) +
labs(title="Relative Letter Frequency", x = "letter", y="relative frequency")
}
print(p)
}
fplot(str,"None")
fplot <- function(str,ref){
#input: raw text, array with reference frequencies
#output: plot
freqs <- sanitize(str)
rfreqs <- freqs/sum(freqs)
alphabet_filled_freqs <- fill_freqs(freqs)
alphabet_filled_rfreqs <- fill_freqs(rfreqs)
if (ref[1] != "None") {
alphabet_filled_ref <- fill_freqs(ref)
#two-hist plot
p <- ggplot(data=alphabet_filled, aes(x=seq(1:26),y=rfreqs)) + geom_bar(stat="identity",aes(fill=rfreqs)) +
scale_x_discrete(breaks = c(1:26), labels=letters) +
geom_bar(data=alphabet_filled_ref,stat="identity",color="salmon",alpha = 0) +
theme(legend.position="none") +
#             geom_text(aes(label=rfreqs),hjust=0,vjust=-0.5,size=4) +
labs(title="Relative Letter Frequency", x = "letter", y="relative frequency")
} else {
#one-hist plot
p <- ggplot(data=alphabet_filled_rfreqs, aes(x=seq(1:26),y=rfreqs)) + geom_bar(stat="identity",aes(fill=rfreqs)) +
scale_x_discrete(breaks = c(1:26), labels=letters) +
theme(legend.position="none") +
geom_text(aes(label=round(rfreqs)),hjust=0,vjust=-0.5,size=4) +
labs(title="Relative Letter Frequency", x = "letter", y="relative frequency")
}
print(p)
}
fplot(str,"None")
fplot <- function(str,ref){
#input: raw text, array with reference frequencies
#output: plot
freqs <- sanitize(str)
rfreqs <- freqs/sum(freqs)
alphabet_filled_freqs <- fill_freqs(freqs)
alphabet_filled_rfreqs <- fill_freqs(rfreqs)
if (ref[1] != "None") {
alphabet_filled_ref <- fill_freqs(ref)
#two-hist plot
p <- ggplot(data=alphabet_filled, aes(x=seq(1:26),y=rfreqs)) + geom_bar(stat="identity",aes(fill=rfreqs)) +
scale_x_discrete(breaks = c(1:26), labels=letters) +
geom_bar(data=alphabet_filled_ref,stat="identity",color="salmon",alpha = 0) +
theme(legend.position="none") +
#             geom_text(aes(label=rfreqs),hjust=0,vjust=-0.5,size=4) +
labs(title="Relative Letter Frequency", x = "letter", y="relative frequency")
} else {
#one-hist plot
p <- ggplot(data=alphabet_filled_rfreqs, aes(x=seq(1:26),y=rfreqs)) + geom_bar(stat="identity",aes(fill=rfreqs)) +
scale_x_discrete(breaks = c(1:26), labels=letters) +
theme(legend.position="none") +
geom_text(aes(label=round(freqs/sum(freqs))),hjust=0,vjust=-0.5,size=4) +
labs(title="Relative Letter Frequency", x = "letter", y="relative frequency")
}
print(p)
}
fplot(str,"None")
fplot <- function(str,ref){
#input: raw text, array with reference frequencies
#output: plot
freqs <- sanitize(str)
rfreqs <- freqs/sum(freqs)
alphabet_filled_freqs <- fill_freqs(freqs)
alphabet_filled_rfreqs <- fill_freqs(rfreqs)
if (ref[1] != "None") {
alphabet_filled_ref <- fill_freqs(ref)
#two-hist plot
p <- ggplot(data=alphabet_filled, aes(x=seq(1:26),y=rfreqs)) + geom_bar(stat="identity",aes(fill=rfreqs)) +
scale_x_discrete(breaks = c(1:26), labels=letters) +
geom_bar(data=alphabet_filled_ref,stat="identity",color="salmon",alpha = 0) +
theme(legend.position="none") +
#             geom_text(aes(label=rfreqs),hjust=0,vjust=-0.5,size=4) +
labs(title="Relative Letter Frequency", x = "letter", y="relative frequency")
} else {
#one-hist plot
p <- ggplot(data=alphabet_filled_rfreqs, aes(x=seq(1:26),y=rfreqs)) + geom_bar(stat="identity",aes(fill=rfreqs)) +
scale_x_discrete(breaks = c(1:26), labels=letters) +
theme(legend.position="none") +
geom_text(aes(label=rfreqs),hjust=0,vjust=-0.5,size=4) +
labs(title="Relative Letter Frequency", x = "letter", y="relative frequency")
}
print(p)
}
fplot(str,"None")
fplot <- function(str,ref){
#input: raw text, array with reference frequencies
#output: plot
freqs <- sanitize(str)
rfreqs <- freqs/sum(freqs)
alphabet_filled_freqs <- fill_freqs(freqs)
alphabet_filled_rfreqs <- fill_freqs(rfreqs)
if (ref[1] != "None") {
alphabet_filled_ref <- fill_freqs(ref)
#two-hist plot
p <- ggplot(data=alphabet_filled, aes(x=seq(1:26),y=rfreqs)) + geom_bar(stat="identity",aes(fill=rfreqs)) +
scale_x_discrete(breaks = c(1:26), labels=letters) +
geom_bar(data=alphabet_filled_ref,stat="identity",color="salmon",alpha = 0) +
theme(legend.position="none") +
#             geom_text(aes(label=rfreqs),hjust=0,vjust=-0.5,size=4) +
labs(title="Relative Letter Frequency", x = "letter", y="relative frequency")
} else {
#one-hist plot
p <- ggplot(data=alphabet_filled_rfreqs, aes(x=seq(1:26),y=rfreqs)) + geom_bar(stat="identity",aes(fill=rfreqs)) +
scale_x_discrete(breaks = c(1:26), labels=letters) +
theme(legend.position="none") +
geom_text(aes(label=round(rfreqs)),hjust=0,vjust=-0.5,size=4) +
labs(title="Relative Letter Frequency", x = "letter", y="relative frequency")
}
print(p)
}
fplot(str,"None")
fplot <- function(str,ref){
#input: raw text, array with reference frequencies
#output: plot
freqs <- sanitize(str)
rfreqs <- freqs/sum(freqs)
alphabet_filled_freqs <- fill_freqs(freqs)
alphabet_filled_rfreqs <- fill_freqs(rfreqs)
if (ref[1] != "None") {
alphabet_filled_ref <- fill_freqs(ref)
#two-hist plot
p <- ggplot(data=alphabet_filled, aes(x=seq(1:26),y=rfreqs)) + geom_bar(stat="identity",aes(fill=rfreqs)) +
scale_x_discrete(breaks = c(1:26), labels=letters) +
geom_bar(data=alphabet_filled_ref,stat="identity",color="salmon",alpha = 0) +
theme(legend.position="none") +
#             geom_text(aes(label=rfreqs),hjust=0,vjust=-0.5,size=4) +
labs(title="Relative Letter Frequency", x = "letter", y="relative frequency")
} else {
#one-hist plot
p <- ggplot(data=alphabet_filled_rfreqs, aes(x=seq(1:26),y=rfreqs)) + geom_bar(stat="identity",aes(fill=rfreqs)) +
scale_x_discrete(breaks = c(1:26), labels=letters) +
theme(legend.position="none") +
geom_text(aes(label=round(alphabet_filled_freqs$rfreqs)),hjust=0,vjust=-0.5,size=4) +
labs(title="Relative Letter Frequency", x = "letter", y="relative frequency")
}
print(p)
}
fplot(str,"None")
runApp(".")
runApp(".")
runApp(".")
runApp(".")
runApp(".")
getwd()
runApp(".")
runApp(".")
runApp(".")
shiny::runApp()
#helper functions
library(ggplot2)
sanitize <- function(str){
#input: raw text string
#output: relative frequencies
str <- substr(str,1,30000)
newstr <- gsub("[^[:alpha:]]", "", str)
newstr <- tolower(newstr)
chars <- strsplit(newstr, NULL)[[1]]
freqs <- summary(factor(chars))
rfreqs <- freqs / sum(freqs)
return(freqs)
}
fill_freqs <- function(freqs) {
#input: relative frequencies (not necessarily for all 26 letters)
#output: relative frequencies for all 26 letters
#make 0-count vector
alphabet <- rep(1,26)
names(alphabet) <- letters
alphabet_filled <- sapply(1:26, function(x) {freqs[names(alphabet)[x]]})
alphabet_filled[is.na(alphabet_filled)] <- 0
names(alphabet_filled) <- letters
alphabet_filled <- as.data.frame(alphabet_filled)
names(alphabet_filled) <- "rfreqs"
return(alphabet_filled)
}
freqs <- sanitize(str)
rfreqs <- freqs/sum(freqs)
alphabet_filled_freqs <- fill_freqs(freqs)
alphabet_filled_rfreqs <- fill_freqs(rfreqs)
str="abcdd"
freqs <- sanitize(str)
rfreqs <- freqs/sum(freqs)
alphabet_filled_freqs <- fill_freqs(freqs)
alphabet_filled_rfreqs <- fill_freqs(rfreqs)
str
typeof(alphabet_filled_freqs
)
class(alphabet_filled_freqs)
names(alphabet_filled_freqs)
names(alphabet_filled_rfreqs)
View(alphabet_filled_freqs)
View(cbind(alphabet_filled_freqs,alphabet_filled_rfreqs))
View(alphabet_filled_freqs)
View(alphabet_filled_rfreqs)
?merge
View(merge(alphabet_filled_freqs,alphabet_filled_rfreqs))
View(merge(alphabet_filled_freqs,alphabet_filled_rfreqs))
View(merge(alphabet_filled_freqs,alphabet_filled_rfreqs,by.x))
View(merge(alphabet_filled_freqs,alphabet_filled_rfreqs,by.x=by))
rownames(alphabet_filled_freqs)
View(merge(alphabet_filled_freqs,alphabet_filled_rfreqs,by=intersect(rownames(alphabet_filled_freqs,alphabet_filled_rfreqs))))
View(merge(alphabet_filled_freqs,alphabet_filled_rfreqs,by=0,all=TRUE))
View(alphabet_filled_freqs)
View(alphabet_filled_freqs)
alphabet_filled_new <- merge(alphabet_filled_freqs,alphabet_filled_rfreqs,by=0,all=TRUE)
names(alphabet_filled_new)
rownames(alphabet_filled_new)
rownames(alphabet_filled_freqs)
alphabet_filled_new <- merge(alphabet_filled_freqs,alphabet_filled_rfreqs,by=0,all=TRUE)
rownames(alphabet_filled_new) <- rownames(alphabet_filled_freqs)
names(alphabet_filled_new) <- c("Row.names, freqs, rfreqs")
View(alphabet_filled_new)
alphabet_filled_new
names(alphabet_filled-new)
names(alphabet_filled_new)
freqs <- sanitize(str)
rfreqs <- freqs/sum(freqs)
alphabet_filled_freqs <- fill_freqs(freqs)
alphabet_filled_rfreqs <- fill_freqs(rfreqs)
alphabet_filled_new <- merge(alphabet_filled_freqs,alphabet_filled_rfreqs,by=0,all=TRUE)
names(alphabet_filled_new)
colnames(alphabet_filled_new)
colnames(alphabet_filled_new) <- c("Row.names, freqs, rfreqs")
colnames(alphabet_filled_new)
freqs <- sanitize(str)
rfreqs <- freqs/sum(freqs)
alphabet_filled_freqs <- fill_freqs(freqs)
alphabet_filled_rfreqs <- fill_freqs(rfreqs)
alphabet_filled_new <- merge(alphabet_filled_freqs,alphabet_filled_rfreqs,by=0,all=TRUE)
colnames(alphabet_filled_new)
View(alphabet_filled_new)
dim(alphabet_filled_new)
colnames(alphabet_filled_new)[1]
colnames(alphabet_filled_new)[1] <- "hey"
colnames(alphabet_filled_new)[1]
colnames(alphabet_filled_new)
colnames(alphabet_filled_new)[2]
freqs <- sanitize(str)
rfreqs <- freqs/sum(freqs)
alphabet_filled_freqs <- fill_freqs(freqs)
alphabet_filled_rfreqs <- fill_freqs(rfreqs)
alphabet_filled_new <- merge(alphabet_filled_freqs,alphabet_filled_rfreqs,by=0,all=TRUE)
rownames(alphabet_filled_new) <- rownames(alphabet_filled_freqs)
colnames(alphabet_filled_new) <- c("Row.names", "freqs", "rfreqs")
colnames(alphabet_filled_new)
View(alphabet_filled_new)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
getwd()
setwd("../letterFreq_slide_deck")
getwd()
ls
ls()
